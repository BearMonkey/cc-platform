package org.monkey.dto.sprinterhu.parcel;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.annotation.JSONField;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

/**
 * ParcelResult
 *
 * @author cc
 * @since 2024/6/11 11:48
 */
@Data
public class ParcelResult {

    @ApiModelProperty(" Error code")
    @JSONField(name="ErrorCode")
    private String errorCode;

    @ApiModelProperty(" Original barcode, which was sent at the registration")
    @JSONField(name="OriginalBarCode")
    private String originalBarCode;

    @ApiModelProperty(" New barcode")
    @JSONField(name="NewBarCode")
    private String newBarCode;

    @ApiModelProperty(" Not used anymore")
    @JSONField(name="OriginalDirectPackageBarCode")
    private String originalDirectPackageBarCode;

    @ApiModelProperty(" New barcode of a physical parcel, if it had to be re-generated. Not used anymore")
    @JSONField(name="NewDirectPackageBarCode")
    private String newDirectPackageBarCode;

    @ApiModelProperty(" Shipment ID connected to the parcel, which is generated by the system. In case of PPP service, 1 ID is generated per ServiceType. In case of HD service each Parcel has a separated ID.")
    @JSONField(name="ShipmentID")
    private String shipmentID;

    @ApiModelProperty(" Route number of the delivery address. In case of HD: postal code â€“> route number, in case of PPP route from depot to PPP ")
    @JSONField(name="DirectionNumber")
    private String directionNumber;

    @ApiModelProperty(" Route number of pickup address (Only at HD service and return)")
    @JSONField(name="DirectionNumberSender")
    private String directionNumberSender;

    @ApiModelProperty(" Response from international call")
    @JSONField(name="ErrorMessageInternational")
    private String errorMessageInternational;

    @ApiModelProperty(" Delayed delivery. Not used anymore.")
    @JSONField(name="IsDelayedDelivery")
    private boolean isDelayedDelivery;


    @Override
    public String toString() {
        return JSONObject.toJSONString(this);
    }
}
